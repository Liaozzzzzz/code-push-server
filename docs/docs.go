// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dept/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建部门",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dept"
                ],
                "summary": "创建部门",
                "parameters": [
                    {
                        "description": "Dept Create Form",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeptCreateForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DeptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dept/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除部门",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dept"
                ],
                "summary": "删除部门",
                "parameters": [
                    {
                        "description": "Dept Delete Form",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeptDeleteForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dept/tree": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取部门树形结构",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dept"
                ],
                "summary": "获取部门树",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.DeptTreeResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dept/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新部门信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dept"
                ],
                "summary": "更新部门信息",
                "parameters": [
                    {
                        "description": "Dept Update Form",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeptUpdateForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "账户密码登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "账户密码登录",
                "parameters": [
                    {
                        "description": "Login Form",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LoginResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DeptCreateForm": {
            "type": "object",
            "required": [
                "deptName",
                "parentId",
                "sort",
                "status"
            ],
            "properties": {
                "deptName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "email": {
                    "type": "string",
                    "maxLength": 50
                },
                "leader": {
                    "type": "string",
                    "maxLength": 50
                },
                "parentId": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 50
                },
                "sort": {
                    "type": "integer"
                },
                "status": {
                    "enum": [
                        "1",
                        "0"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.DeptStatus"
                        }
                    ]
                }
            }
        },
        "dto.DeptDeleteForm": {
            "type": "object",
            "required": [
                "deptId"
            ],
            "properties": {
                "deptId": {
                    "type": "integer"
                }
            }
        },
        "dto.DeptResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deptId": {
                    "type": "integer"
                },
                "deptName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "leader": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.DeptStatus"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.DeptTreeResponse": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DeptTreeResponse"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deptId": {
                    "type": "integer"
                },
                "deptName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "leader": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.DeptStatus"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.DeptUpdateForm": {
            "type": "object",
            "required": [
                "deptId",
                "deptName",
                "parentId",
                "sort",
                "status"
            ],
            "properties": {
                "deptId": {
                    "type": "integer"
                },
                "deptName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "email": {
                    "type": "string",
                    "maxLength": 50
                },
                "leader": {
                    "type": "string",
                    "maxLength": 50
                },
                "parentId": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 50
                },
                "sort": {
                    "type": "integer"
                },
                "status": {
                    "enum": [
                        "1",
                        "0"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.DeptStatus"
                        }
                    ]
                }
            }
        },
        "dto.LoginForm": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResult": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "令牌",
                    "type": "string"
                },
                "user": {
                    "description": "用户",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.User"
                        }
                    ]
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "ackCode": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userStatus": {
                    "$ref": "#/definitions/types.UserStatus"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "errors.BusinessCode": {
            "type": "integer",
            "enum": [
                10000,
                20001,
                20002,
                20003,
                20004,
                20007,
                20008,
                20009,
                20010,
                20011,
                30001,
                30002,
                30003
            ],
            "x-enum-comments": {
                "CodeCreateFailed": "创建失败",
                "CodeDatabaseError": "数据库错误",
                "CodeDisabled": "已禁用",
                "CodeInternalError": "内部服务器错误",
                "CodeInvalidParams": "参数错误",
                "CodeInvalidToken": "无效的令牌",
                "CodePermissionDenied": "权限不足",
                "CodeResourceExists": "资源已存在",
                "CodeResourceNotFound": "资源不存在",
                "CodeServiceError": "服务错误",
                "CodeTokenExpired": "令牌过期",
                "CodeUpdateFailed": "更新失败"
            },
            "x-enum-varnames": [
                "CodeSuccess",
                "CodeInvalidParams",
                "CodeResourceExists",
                "CodeResourceNotFound",
                "CodePermissionDenied",
                "CodeInvalidToken",
                "CodeTokenExpired",
                "CodeCreateFailed",
                "CodeUpdateFailed",
                "CodeDisabled",
                "CodeInternalError",
                "CodeDatabaseError",
                "CodeServiceError"
            ]
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "业务状态码",
                    "allOf": [
                        {
                            "$ref": "#/definitions/errors.BusinessCode"
                        }
                    ]
                },
                "data": {},
                "message": {
                    "description": "响应消息",
                    "type": "string"
                }
            }
        },
        "types.DeptStatus": {
            "type": "string",
            "enum": [
                "1",
                "0",
                "1",
                "0"
            ],
            "x-enum-varnames": [
                "UserEnabled",
                "UserDisabled"
            ]
        },
        "types.UserStatus": {
            "type": "string",
            "enum": [
                "1",
                "0",
                "1",
                "0",
                "1",
                "0"
            ],
            "x-enum-varnames": [
                "UserEnabled",
                "UserDisabled"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8042",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "code-push-server",
	Description:      "code-push-server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
